"use strict";(self.webpackChunk_tkg_docs=self.webpackChunk_tkg_docs||[]).push([[366],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,y=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(y,o(o({ref:t},c),{},{components:n})):r.createElement(y,o({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5839:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return u}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],p={title:"Upload a site to Meli",sitebarTitle:"Upload a site",description:"Learn how to upload a site to Meli"},l=void 0,s={unversionedId:"get-started/upload-site",id:"get-started/upload-site",title:"Upload a site to Meli",description:"Learn how to upload a site to Meli",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/get-started/upload-site.md",sourceDirName:"get-started",slug:"/get-started/upload-site",permalink:"/tkg-sdk-doc/zh/get-started/upload-site",editUrl:"https://github.com/getmeli/meli-docs/edit/latest/docs/get-started/upload-site.md",tags:[],version:"current",frontMatter:{title:"Upload a site to Meli",sitebarTitle:"Upload a site",description:"Learn how to upload a site to Meli"},sidebar:"docs",previous:{title:"Introduction",permalink:"/tkg-sdk-doc/zh/"},next:{title:"Single page applications (SPA)",permalink:"/tkg-sdk-doc/zh/get-started/single-page-applications"}},c={},u=[{value:"Github Actions",id:"github-actions",level:2}],m={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"In the UI, create a site, say ",(0,i.kt)("inlineCode",{parentName:"p"},"my-site"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"In ",(0,i.kt)("inlineCode",{parentName:"p"},"my-site"),", go to the ",(0,i.kt)("strong",{parentName:"p"},"Tokens")," tab and copy a token")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"In ",(0,i.kt)("inlineCode",{parentName:"p"},"my-site"),", go to the ",(0,i.kt)("strong",{parentName:"p"},"Settings")," tab, and copy the ",(0,i.kt)("strong",{parentName:"p"},"Site ID"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Assuming your static site has been built into a directory named ",(0,i.kt)("inlineCode",{parentName:"p"},"public"),", run:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},'npx -p "@getmeli/cli" meli upload \\\n   ./public \\\n    --url http://localhost:80 \\\n    --site <site-id> \\\n    --token <site-token> \\\n    --branch "latest"\n'))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Your site is now live at ",(0,i.kt)("inlineCode",{parentName:"p"},"https://latest.my-site.meli.my-company.com")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"https://my-site.meli.my-company.com"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Point your domain to the site in meli. If you are pointing ",(0,i.kt)("inlineCode",{parentName:"p"},"sub.domain.com")," to a meli site, you can add a ",(0,i.kt)("inlineCode",{parentName:"p"},"CNAME")," DNS record to point ",(0,i.kt)("inlineCode",{parentName:"p"},"sub.domain.com")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"my-site.meli.my-company.com"),". If you are pointing a primary domain (",(0,i.kt)("inlineCode",{parentName:"p"},"domain.com"),"), you have to create a DNS ",(0,i.kt)("inlineCode",{parentName:"p"},"A")," record ppointing to the ",(0,i.kt)("strong",{parentName:"p"},"IP")," where Meli serves your sites."))),(0,i.kt)("h2",{id:"github-actions"},"Github Actions"),(0,i.kt)("p",null,"Add a repository secret named ",(0,i.kt)("inlineCode",{parentName:"p"},"MELI_TOKEN")," with a Meli token for your site, then update your build workflow:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'name: main\non: [ push ]\nenv:\n  MELI_SITE: "6d09389c-5cb7-4839-ba4b-a0ff75c12851"\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions/setup-node@v1\n        with:\n          node-version: \'12\'\n      - name: "build"\n        run: |\n          npm ci\n          npm run build\n      - name: "publish"\n        run: |\n          npx -p "@getmeli/cli" meli upload ./public \\\n            --url "https://meli.my-company.com" \\\n            --site "$MELI_SITE" \\\n            --token "$MELI_TOKEN" \\\n            --release "$GITHUB_SHA"\n        env:\n          MELI_TOKEN: ${{ secrets.MELI_TOKEN }}\n          # Enable PR previews:\n          # uses the default GITHUB_TOKEN set by Github Actions\n          # https://docs.github.com/en/actions/reference/authentication-in-a-workflow#about-the-github_token-secret\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n')))}d.isMDXComponent=!0}}]);