(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{104:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var r=n(0),o=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=o.a.createContext({}),l=function(e){var t=o.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=l(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),m=r,d=p["".concat(a,".").concat(m)]||p[m]||f[m]||i;return n?o.a.createElement(d,c(c({ref:t},u),{},{components:n})):o.a.createElement(d,c({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var u=2;u<i;u++)a[u]=n[u];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return l}));var r=n(3),o=n(7),i=(n(0),n(104)),a={title:"SSL",description:"Learn how to configure SSL for Meli"},c={unversionedId:"configuration/ssl",id:"configuration/ssl",isDocsHomePage:!1,title:"SSL",description:"Learn how to configure SSL for Meli",source:"@site/docs/configuration/ssl.md",slug:"/configuration/ssl",permalink:"/tkg-sdk-doc/configuration/ssl",editUrl:"https://github.com/getmeli/meli-docs/edit/latest/docs/configuration/ssl.md",version:"current",sidebar:"docs",previous:{title:"Environment variables",permalink:"/tkg-sdk-doc/configuration/environment-reference"},next:{title:"Email configuration",permalink:"/tkg-sdk-doc/configuration/emails"}},s=[{value:"Test with Let&#39;sEncrypt staging environment",id:"test-with-letsencrypt-staging-environment",children:[]},{value:"Using a custom ACME server",id:"using-a-custom-acme-server",children:[]}],u={toc:s};function l(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Meli is built on top of ",Object(i.b)("a",{parentName:"p",href:"https://caddyserver.com/"},"Caddy"),". Hence, it natively supports automatic SSL certificate issuance and renewal. By default, it uses LetsEncrypt, but Meli can obtain SSL certificates from a certification authority (CA) using the ACME protocol."),Object(i.b)("h2",{id:"test-with-letsencrypt-staging-environment"},"Test with Let'sEncrypt staging environment"),Object(i.b)("p",null,"Let's Ecnrypt production ",Object(i.b)("a",{parentName:"p",href:"https://letsencrypt.org/docs/rate-limits/"},"rate limits")," leave small room for error. Hence, we recommend using their staging environment to start off. All you need to do is to set:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-dotenv"},"MELI_ACME_SERVER=https://acme-staging-v02.api.letsencrypt.org/directory\n")),Object(i.b)("h2",{id:"using-a-custom-acme-server"},"Using a custom ACME server"),Object(i.b)("p",null,"If you want to use a custom another CA:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-dotenv"},"# The URL to the ACME directory, here is an example \nMELI_ACME_SERVER=https://acme-staging-v02.api.letsencrypt.org/directory\n\n# Optionaly, if using a private ACME server, you should specify:\nMELI_ACME_CA_PATH=<path to the CA certificate in the Caddy container>\n")))}l.isMDXComponent=!0}}]);