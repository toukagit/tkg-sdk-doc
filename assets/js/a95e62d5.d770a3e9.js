"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1640],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return g}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),l=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=l(e.components);return i.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=l(n),g=r,f=u["".concat(s,".").concat(g)]||u[g]||p[g]||o;return n?i.createElement(f,a(a({ref:t},d),{},{components:n})):i.createElement(f,a({ref:t},d))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var l=2;l<o;l++)a[l]=n[l];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3848:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return p}});var i=n(7462),r=n(3366),o=(n(7294),n(3905)),a=["components"],c={sidebar_position:7},s="For iOS",l={unversionedId:"tkg-integration/sdk-projectsettings/sdk-projectsettings-ios",id:"version-2.2.x/tkg-integration/sdk-projectsettings/sdk-projectsettings-ios",title:"For iOS",description:"Certificate Settings",source:"@site/i18n/en/docusaurus-plugin-content-docs/version-2.2.x/tkg-integration/sdk-projectsettings/sdk-projectsettings-ios.md",sourceDirName:"tkg-integration/sdk-projectsettings",slug:"/tkg-integration/sdk-projectsettings/sdk-projectsettings-ios",permalink:"/tkg-sdk-doc/2.2.x/tkg-integration/sdk-projectsettings/sdk-projectsettings-ios",tags:[],version:"2.2.x",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"For Android",permalink:"/tkg-sdk-doc/2.2.x/tkg-integration/sdk-projectsettings/sdk-projectsettings-android"},next:{title:"Android Integration Verification",permalink:"/tkg-sdk-doc/2.2.x/tkg-integration/sdk-test/sdk-test-android"}},d={},p=[{value:"Certificate Settings",id:"certificate-settings",level:2},{value:"1\u3001Company Apple Developer Account",id:"1company-apple-developer-account",level:3},{value:"2\u3001Individual Apple Developer Account",id:"2individual-apple-developer-account",level:3},{value:"Unity Settings",id:"unity-settings",level:2},{value:"1. IL2CPP",id:"1-il2cpp",level:3},{value:"Xcode Settings",id:"xcode-settings",level:2},{value:"1. Add dynamic library for ads sdk   (CN Only)",id:"1-add-dynamic-library-for-ads-sdk---cn-only",level:3},{value:"2. Add Excluded Architectures (GB Only)",id:"2-add-excluded-architectures-gb-only",level:3},{value:"3. Enable Objective-C Exceptions (GB Only)",id:"3-enable-objective-c-exceptions-gb-only",level:3}],u={toc:p};function g(e){var t=e.components,c=(0,r.Z)(e,a);return(0,o.kt)("wrapper",(0,i.Z)({},u,c,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"for-ios"},"For iOS"),(0,o.kt)("h2",{id:"certificate-settings"},"Certificate Settings"),(0,o.kt)("p",null,"Please confirm the apple developer account type of used. Then set as follows."),(0,o.kt)("h3",{id:"1company-apple-developer-account"},"1\u3001Company Apple Developer Account"),(0,o.kt)("b",null,"First. Grant  Your Apple ID with  App Store developer account access"),"    ",(0,o.kt)("br",null),"Please confirm that your Apple ID has been granted and that you have confirmed acceptance. Then Use this account to log in in xcode.      ",(0,o.kt)("br",null),(0,o.kt)("b",null,"Second. Installed the iOS certificate provided by us"),"    ",(0,o.kt)("br",null),"Please make sure you have installed the certificate provided by us. (",(0,o.kt)("font",{color:"#ff0000"},"no need mobileprovision file"),", After installing the certificate, can try restarting xcode.)  ",(0,o.kt)("br",null),(0,o.kt)("b",null,"Third. Select Automatically manage signing in xcode"),"    ",(0,o.kt)("br",null),(0,o.kt)("p",null," ",(0,o.kt)("img",{alt:"ios_autocert",src:n(8202).Z,width:"2480",height:"906"})),(0,o.kt)("h3",{id:"2individual-apple-developer-account"},"2\u3001Individual Apple Developer Account"),(0,o.kt)("b",null,"First. Grant  Your Apple ID with  App Store developer account access"),"    ",(0,o.kt)("br",null),"Please confirm that your Apple ID has been granted and that you have confirmed acceptance. Then Use this account to log in in xcode.      ",(0,o.kt)("br",null),(0,o.kt)("b",null,"Second. Installed the iOS certificate and mobileprovision file provided by us"),"    ",(0,o.kt)("br",null),"Please make sure you have installed the certificate and mobileprovision file provided by us. (After installing the certificate, can try restarting xcode.)  ",(0,o.kt)("br",null),(0,o.kt)("b",null,"Third. The settings in xcode are as follows"),"    ",(0,o.kt)("br",null),(0,o.kt)("p",null," ",(0,o.kt)("img",{alt:"ios_autocert",src:n(4879).Z,width:"1762",height:"602"})),(0,o.kt)("h2",{id:"unity-settings"},"Unity Settings"),(0,o.kt)("h3",{id:"1-il2cpp"},"1. IL2CPP"),(0,o.kt)("p",null,"Project Settings --\x3e Player --\x3e Scripting Backend: IL2CPP"),(0,o.kt)("h2",{id:"xcode-settings"},"Xcode Settings"),(0,o.kt)("h3",{id:"1-add-dynamic-library-for-ads-sdk---cn-only"},"1. Add dynamic library for ads sdk   (CN Only)"),(0,o.kt)("p",null,"Step1. ",(0,o.kt)("inlineCode",{parentName:"p"},"Build Settings -> bitcode -> No")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"ks_02_re01",src:n(923).Z,width:"1280",height:"316"})),(0,o.kt)("p",null,"Step2.    "),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"ks_03_re02",src:n(7364).Z,width:"1280",height:"835"})),(0,o.kt)("p",null,"Step3.    "),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"ks_04_re03",src:n(874).Z,width:"1916",height:"1096"})),(0,o.kt)("p",null,"Step4.   "),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"ks_05_re04",src:n(594).Z,width:"1280",height:"540"})),(0,o.kt)("p",null,"Step5.   "),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"ks_06_re05",src:n(4275).Z,width:"1218",height:"797"})),(0,o.kt)("p",null,"Step6.     "),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"ks_07_re06",src:n(8234).Z,width:"1280",height:"851"}),"   "),(0,o.kt)("p",null,"Step7. The script content can be copied directly from the bash script below the screenshot.    "),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"ks_08_re07",src:n(8770).Z,width:"1280",height:"745"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"The bash script shown in the screenshot:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# Type a script or drag a script file from your workspace to insert its path.\nAPP_PATH="${TARGET_BUILD_DIR}/${WRAPPER_NAME}"\n\n# This script loops through the frameworks embedded in the application and\n# removes unused architectures.\nfind "$APP_PATH" -name \'*.framework\' -type d | while read -r FRAMEWORK\ndo\n  FRAMEWORK_EXECUTABLE_NAME=$(defaults read "$FRAMEWORK/Info.plist" CFBundleExecutable)\n  FRAMEWORK_EXECUTABLE_PATH="$FRAMEWORK/$FRAMEWORK_EXECUTABLE_NAME"\n  echo "Executable is $FRAMEWORK_EXECUTABLE_PATH"\n  # ignore non-fat framework\n  IS_FAT=$(lipo -info $FRAMEWORK_EXECUTABLE_PATH | grep \'Non-fat\')\n  if [[ ${IS_FAT} ]]; then\n    echo "ignoring ${FRAMEWORK_EXECUTABLE_PATH} because it\'s a Non-fat binary"\n    continue\n  fi\n\n  EXTRACTED_ARCHS=()\n\n  for ARCH in $ARCHS\n  do\n    echo "Extracting $ARCH from $FRAMEWORK_EXECUTABLE_NAME"\n    lipo -extract "$ARCH" "$FRAMEWORK_EXECUTABLE_PATH" -o "$FRAMEWORK_EXECUTABLE_PATH-$ARCH"\n    EXTRACTED_ARCHS+=("$FRAMEWORK_EXECUTABLE_PATH-$ARCH")\n  done\n\n  echo "Merging extracted architectures: ${ARCHS}"\n  lipo -o "$FRAMEWORK_EXECUTABLE_PATH-merged" -create "${EXTRACTED_ARCHS[@]}"\n  rm "${EXTRACTED_ARCHS[@]}"\n\n  echo "Replacing original executable with thinned version"\n  rm "$FRAMEWORK_EXECUTABLE_PATH"\n  mv "$FRAMEWORK_EXECUTABLE_PATH-merged" "$FRAMEWORK_EXECUTABLE_PATH"\n\ndone\n')),(0,o.kt)("h3",{id:"2-add-excluded-architectures-gb-only"},"2. Add Excluded Architectures (GB Only)"),(0,o.kt)("p",null," ",(0,o.kt)("img",{alt:"config",src:n(6013).Z,width:"2222",height:"1518"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"}," EXCLUDED_ARCHS__EFFECTIVE_PLATFORM_SUFFIX_simulator__NATIVE_ARCH_64_BIT_x86_64=arm64 arm64e armv7 armv7s armv6 armv8 EXCLUDED_ARCHS=$(inherited) $(EXCLUDED_ARCHS__EFFECTIVE_PLATFORM_SUFFIX_$(EFFECTIVE_PLATFORM_SUFFIX)__NATIVE_ARCH_64_BIT_$(NATIVE_ARCH_64_BIT))\n")),(0,o.kt)("h3",{id:"3-enable-objective-c-exceptions-gb-only"},"3. Enable Objective-C Exceptions (GB Only)"),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(3731).Z,width:"2586",height:"522"})))}g.isMDXComponent=!0},6013:function(e,t,n){t.Z=n.p+"assets/images/addarch-9fab531239d821d2f63cd8059e97e195.jpg"},3731:function(e,t,n){t.Z=n.p+"assets/images/errorTrySolu-c2654d2926f208b3ba2d0ac47d00fdb5.jpg"},8202:function(e,t,n){t.Z=n.p+"assets/images/config_ios_autocert-7179235ac9905d89ee2ab0776904ae5a.jpg"},4879:function(e,t,n){t.Z=n.p+"assets/images/config_ios_noautocert-48c70480c4ec541260aa2267b5432b5d.jpg"},923:function(e,t,n){t.Z=n.p+"assets/images/ks_02_re01-7e6efdf7f65ce192c3f100d79fef2a2d.png"},7364:function(e,t,n){t.Z=n.p+"assets/images/ks_03_re02-145d54b11a7a54be4e932cca9acdb8ce.png"},874:function(e,t,n){t.Z=n.p+"assets/images/ks_04_re03-2f0d56ff57f1fa833c1dc7a6e551df42.jpeg"},594:function(e,t,n){t.Z=n.p+"assets/images/ks_05_re04-1cf67c85923ef2eccd605e705d4c79ed.png"},4275:function(e,t,n){t.Z=n.p+"assets/images/ks_06_re05-f85848c08cd972d6a50b197f97479de0.png"},8234:function(e,t,n){t.Z=n.p+"assets/images/ks_07_re06-ce7d9e665c27d2cb6ad6c810f9957b68.png"},8770:function(e,t,n){t.Z=n.p+"assets/images/ks_08_re07-835f7ff93e8ff488e0544623b22de982.png"}}]);