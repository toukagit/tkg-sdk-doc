"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7359],{3905:function(t,n,e){e.d(n,{Zo:function(){return s},kt:function(){return p}});var l=e(7294);function r(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function o(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,l)}return e}function i(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?o(Object(e),!0).forEach((function(n){r(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):o(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function u(t,n){if(null==t)return{};var e,l,r=function(t,n){if(null==t)return{};var e,l,r={},o=Object.keys(t);for(l=0;l<o.length;l++)e=o[l],n.indexOf(e)>=0||(r[e]=t[e]);return r}(t,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(l=0;l<o.length;l++)e=o[l],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(r[e]=t[e])}return r}var a=l.createContext({}),c=function(t){var n=l.useContext(a),e=n;return t&&(e="function"==typeof t?t(n):i(i({},n),t)),e},s=function(t){var n=c(t.components);return l.createElement(a.Provider,{value:n},t.children)},g={inlineCode:"code",wrapper:function(t){var n=t.children;return l.createElement(l.Fragment,{},n)}},k=l.forwardRef((function(t,n){var e=t.components,r=t.mdxType,o=t.originalType,a=t.parentName,s=u(t,["components","mdxType","originalType","parentName"]),k=c(e),p=r,d=k["".concat(a,".").concat(p)]||k[p]||g[p]||o;return e?l.createElement(d,i(i({ref:n},s),{},{components:e})):l.createElement(d,i({ref:n},s))}));function p(t,n){var e=arguments,r=n&&n.mdxType;if("string"==typeof t||r){var o=e.length,i=new Array(o);i[0]=k;var u={};for(var a in n)hasOwnProperty.call(n,a)&&(u[a]=n[a]);u.originalType=t,u.mdxType="string"==typeof t?t:r,i[1]=u;for(var c=2;c<o;c++)i[c]=e[c];return l.createElement.apply(null,i)}return l.createElement.apply(null,e)}k.displayName="MDXCreateElement"},8563:function(t,n,e){e.r(n),e.d(n,{assets:function(){return s},contentTitle:function(){return a},default:function(){return p},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return g}});var l=e(7462),r=e(3366),o=(e(7294),e(3905)),i=["components"],u={sidebar_position:8},a="Account system",c={unversionedId:"tkg-integration/sdk-basic/sdk-func-account",id:"version-3.0.x/tkg-integration/sdk-basic/sdk-func-account",title:"Account system",description:"Account login",source:"@site/i18n/en/docusaurus-plugin-content-docs/version-3.0.x/tkg-integration/sdk-basic/sdk-func-account.md",sourceDirName:"tkg-integration/sdk-basic",slug:"/tkg-integration/sdk-basic/sdk-func-account",permalink:"/tkg-sdk-doc/tkg-integration/sdk-basic/sdk-func-account",tags:[],version:"3.0.x",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"In App Purchase",permalink:"/tkg-sdk-doc/tkg-integration/sdk-basic/sdk-func-iap"},next:{title:"Advanced Integration",permalink:"/tkg-sdk-doc/tkg-integration/sdk-other-func"}},s={},g=[{value:"Account login",id:"account-login",level:2},{value:"Account logout",id:"account-logout",level:2},{value:"Login Mode Query interface",id:"login-mode-query-interface",level:2},{value:"Account delete",id:"account-delete",level:2}],k={toc:g};function p(t){var n=t.components,e=(0,r.Z)(t,i);return(0,o.kt)("wrapper",(0,l.Z)({},k,e,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"account-system"},"Account system"),(0,o.kt)("h2",{id:"account-login"},"Account login"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},'TKGSDKManager.Instance.Login(LoginType.LOGIN_BY_GOOGLE, (loginStatus,  loginType,  loginMsg,  userId,  token,  email,  nickName,  iconUrl) =>{\n\n    Debug.Log("Login status code:"+loginStatus);\n    Debug.Log("Login type:" + loginType);\n    Debug.Log("Login status information:" + loginMsg);\n    Debug.Log("User ID:" + userId);\n    Debug.Log("token:" + token);\n    Debug.Log("email:" + email);\n    Debug.Log("nickName:" + nickName);\n    Debug.Log("icon url:" + iconUrl);\n    \n});\n\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"}," API: "),"     "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"void Login(LoginType _loginType, Action<LoginStatus, LoginType, string, string, string, string,string,string> _loginResultCallback)\n")),(0,o.kt)("table",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,"Name"),(0,o.kt)("td",null,"isRequired"),(0,o.kt)("td",null,"Type"),(0,o.kt)("td",null,"Description")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"_loginType"),(0,o.kt)("td",null,"Y"),(0,o.kt)("td",null,"string"),(0,o.kt)("td",null,"Login type:",(0,o.kt)("br",null),"LoginType.LOGIN_BY_GUESTER  (guester login)",(0,o.kt)("br",null),"LoginType.LOGIN_BY_EMAIL    (email login)",(0,o.kt)("br",null),"LoginType.LOGIN_BY_GOOGLE   (Google login)",(0,o.kt)("br",null),"LoginType.LOGIN_BY_FACEBOOK (Facebook login)",(0,o.kt)("br",null),"LoginType.LOGIN_BY_Apple    (Apple login)",(0,o.kt)("br",null))),(0,o.kt)("tr",null,(0,o.kt)("td",null,"_loginResultCallback"),(0,o.kt)("td",null,"Y"),(0,o.kt)("td",null,"Action"),(0,o.kt)("td",null,"Login callback:",(0,o.kt)("br",null),"loginStatus: Login status code",(0,o.kt)("br",null),"loginType: Login type",(0,o.kt)("br",null),"loginMsg: Login status information",(0,o.kt)("br",null),"userId: userid",(0,o.kt)("br",null),"token: token",(0,o.kt)("br",null),"email: email",(0,o.kt)("br",null),"nickName: nickName",(0,o.kt)("br",null),"iconUrl: iconUrl",(0,o.kt)("br",null)))),(0,o.kt)("h2",{id:"account-logout"},"Account logout"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"TKGSDKManager.Instance.Logout();\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"}," API: "),"     "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"void Logout(Action _logoutCallback = null)\n")),(0,o.kt)("table",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,"Name"),(0,o.kt)("td",null,"isRequired"),(0,o.kt)("td",null,"Type"),(0,o.kt)("td",null,"Description")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"_logoutCallback"),(0,o.kt)("td",null,"N"),(0,o.kt)("td",null,"Action"),(0,o.kt)("td",null,"Logout login callback"))),(0,o.kt)("h2",{id:"login-mode-query-interface"},"Login Mode Query interface"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"List<LoginType> list = TKGSDKManager.Instance.AvailableLoginChannelList();\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"}," API: "),"     "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"List<LoginType> AvailableLoginChannelList();\n")),(0,o.kt)("table",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,"Type"),(0,o.kt)("td",null,"Description")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"List <LoginType> "),(0,o.kt)("td",null,"Returns the currently available login type."))),(0,o.kt)("h2",{id:"account-delete"},"Account delete"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"TKGSDKManager.Instance.DeleteAccount();\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"}," API: "),"     "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"void DeleteAccount(Action<string> _deleteAccountCallback = null);\n")),(0,o.kt)("table",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,"Name"),(0,o.kt)("td",null,"isRequired"),(0,o.kt)("td",null,"Type"),(0,o.kt)("td",null,"Description")),(0,o.kt)("tr",null,(0,o.kt)("td",null,"_deleteAccountCallback"),(0,o.kt)("td",null,"N"),(0,o.kt)("td",null,"Action <string> "),(0,o.kt)("td",null,"Deleting an account callback returns the deleted userId."))))}p.isMDXComponent=!0}}]);